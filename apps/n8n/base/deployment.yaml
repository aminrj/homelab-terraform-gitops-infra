# apps/base/deployment.yaml
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: n8n
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: n8n
#   template:
#     metadata:
#       labels:
#         app: n8n
#     spec:
#       containers:
#         - name: n8n
#           image: docker.n8n.io/n8nio/n8n:latest
#           ports:
#             - containerPort: 5678
#           env:
#             - name: DB_POSTGRESDB_HOST
#               value: n8n-db-cnpg-v1-rw.cnpg-prod.svc.cluster.local:5432/n8n # Replace this with dev afterwards
#             - name: DB_TYPE
#               # value: postgresdb
#               value: jdbc:postgresql://n8n-db-cnpg-v1-rw.cnpg-prod.svc.cluster.local:5432/n8n
# # │       DB_TYPE:                            jdbc:postgresql://n8n-db-cnpg-v1-rw.cnpg-prod.svc.cluster.local:5432/n8n
# # │       DB_POSTGRESDB_DATABASE:             n8n
# # │       DB_POSTGRESDB_HOST:                 n8n-db-cnpg-v1-rw.cnpg-dev.svc.cluster.local
# # │       DB_POSTGRESDB_PORT:                 5432
#             - name: DB_POSTGRESDB_DATABASE
#               value: n8n
#             - name: DB_POSTGRESDB_PORT
#               value: "5432"
#             - name: DB_POSTGRESDB_USER
#               valueFrom:
#                 secretKeyRef:
#                   name: n8n-db-creds
#                   key: username
#             - name: DB_POSTGRESDB_PASSWORD
#               valueFrom:
#                 secretKeyRef:
#                   name: n8n-db-creds
#                   key: password
#             - name: DB_POSTGRESDB_SCHEMA
#               value: public
#             - name: GENERIC_TIMEZONE
#               value: Europe/Stockholm
#             - name: TZ
#               value: Europe/Stockholm
#             - name: N8N_ENCRYPTION_KEY
#               valueFrom:
#                 secretKeyRef:
#                   name: n8n-encryption
#                   key: key
#             - name: N8N_PORT
#               value: "5678"
#             - name: N8N_DEFAULT_EDITION
#               value: "community"
#             - name: N8N_RUNNERS_MODE
#               value: internal
#             - name: N8N_LOG_LEVEL
#               value: debug
#             - name: N8N_DIAGNOSTICS_ENABLED
#               value: "false"
#             - name: N8N_DISABLE_PRODUCTION_MAIN_MENU
#               value: "true"
#             - name: N8N_VERSION_NOTIFICATIONS_ENABLED
#               value: "false"
#             - name: N8N_HIRING_BANNER_ENABLED
#               value: "false"
#             - name: N8N_TEMPLATES_ENABLED
#               value: "false"
#             - name: N8N_PERSONALIZATION_ENABLED
#               value: "false"
#             - name: N8N_COMMUNITY_NODES_ENABLED
#               value: "false"
#
#             - name: LLM_GATEWAY_URL
#               value: "http://llm-gateway-service.llm-gateway.svc.cluster.local"
#             - name: N8N_CUSTOM_EXTENSIONS
#               value: "/opt/custom-nodes"
#
#           volumeMounts:
#             - name: n8n-data
#               mountPath: /home/node/.n8n
#           securityContext:
#             runAsUser: 1000
#             runAsGroup: 1000
#             allowPrivilegeEscalation: false
#       securityContext:
#         fsGroup: 1000
#       volumes:
#         - name: n8n-data
#           persistentVolumeClaim:
#             claimName: n8n-data

apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
spec:
  replicas: 1  # FIXED: n8n Community doesn't support clustering
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
        - name: n8n
          image: docker.n8n.io/n8nio/n8n:latest
          ports:
            - containerPort: 5678
          env:
            # FIXED: Correct database configuration
            - name: DB_TYPE
              value: postgresdb  # FIXED: Was incorrect JDBC URL
            - name: DB_POSTGRESDB_HOST
              value: n8n-db-cnpg-v1-rw.cnpg-prod.svc.cluster.local
            - name: DB_POSTGRESDB_DATABASE
              value: n8n
            - name: DB_POSTGRESDB_PORT
              value: "5432"
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: n8n-db-creds
                  key: username
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: n8n-db-creds
                  key: password
            - name: DB_POSTGRESDB_SCHEMA
              value: public
            # Performance and timezone settings
            - name: GENERIC_TIMEZONE
              value: Europe/Stockholm
            - name: TZ
              value: Europe/Stockholm
            - name: N8N_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: n8n-encryption
                  key: key
            - name: N8N_PORT
              value: "5678"
            - name: N8N_DEFAULT_EDITION
              value: "community"
            # ADDED: Performance optimizations
            - name: EXECUTIONS_PROCESS
              value: "main"  # Run in main process for better performance
            - name: EXECUTIONS_MODE
              value: "regular"  # Regular execution mode
            - name: N8N_RUNNERS_MODE
              value: "internal"
            - name: EXECUTIONS_DATA_SAVE_ON_ERROR
              value: "all"
            - name: EXECUTIONS_DATA_SAVE_ON_SUCCESS
              value: "all"
            - name: EXECUTIONS_DATA_SAVE_ON_PROGRESS
              value: "false"  # Disable to improve performance
            - name: EXECUTIONS_DATA_MAX_AGE
              value: "168"  # Keep executions for 7 days
            - name: EXECUTIONS_DATA_PRUNE
              value: "true"  # Auto-cleanup old executions
            # HTTP request timeouts
            - name: N8N_DEFAULT_TIMEOUT
              value: "300000"  # 5 minutes timeout
            - name: N8N_HTTP_REQUEST_TIMEOUT
              value: "300000"  # 5 minutes for HTTP requests
            # Logging
            - name: N8N_LOG_LEVEL
              value: info  # CHANGED: Less verbose logging
            - name: N8N_DIAGNOSTICS_ENABLED
              value: "false"
            # UI optimizations
            - name: N8N_DISABLE_PRODUCTION_MAIN_MENU
              value: "true"
            - name: N8N_VERSION_NOTIFICATIONS_ENABLED
              value: "false"
            - name: N8N_HIRING_BANNER_ENABLED
              value: "false"
            - name: N8N_TEMPLATES_ENABLED
              value: "false"
            - name: N8N_PERSONALIZATION_ENABLED
              value: "false"
            - name: N8N_COMMUNITY_NODES_ENABLED
              value: "false"
            # Custom LLM Gateway
            - name: LLM_GATEWAY_URL
              value: "http://llm-gateway-service.llm-gateway.svc.cluster.local"
            - name: N8N_CUSTOM_EXTENSIONS
              value: "/opt/custom-nodes"
            - name: DB_POSTGRESDB_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: n8n-db-config
                  key: DB_POSTGRESDB_POOL_SIZE
            - name: DB_POSTGRESDB_MAX_IDLE_TIME
              valueFrom:
                configMapKeyRef:
                  name: n8n-db-config
                  key: DB_POSTGRESDB_MAX_IDLE_TIME
          # ADDED: Resource limits and requests
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          # ADDED: Health checks
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5678
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5678
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n
            # ADDED: Temp directory for better I/O
            - name: tmp-volume
              mountPath: /tmp
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true  # ADDED: Security improvement
      securityContext:
        fsGroup: 1000
      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: n8n-data
        # ADDED: Temporary volume for better performance
        - name: tmp-volume
          emptyDir: {}
      # ADDED: Node affinity for consistent placement
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - n8n
              topologyKey: kubernetes.io/hostname
